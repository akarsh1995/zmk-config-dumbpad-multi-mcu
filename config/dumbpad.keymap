/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        td: td {
            compatible = "zmk,behavior-tap-dance";
            label = "TD";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&to 1>;
        };

        td_divide_eq: td_divide_eq {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_DIVIDE_EQ";
            #binding-cells = <0>;
            bindings = <&kp KP_EQUAL>, <&kp KP_DIVIDE>;
        };
    };

    combos {
        compatible = "zmk,combos";

        calculator {
            bindings = <&kp C_AL_CALC>;
            key-positions = <0 1>;
        };

        calc_2 {
            bindings = <&kp K_CALCULATOR>;
            key-positions = <2 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
          &kp KP_N7  &kp KP_N8  &kp KP_N9   &kp KP_MINUS
          &kp KP_N4  &kp KP_N5  &kp KP_N6   &kp KP_PLUS
&kp C_PP  &kp KP_N1  &kp KP_N2  &kp KP_N3   &kp KP_MULTIPLY
&kp C_PP  &td        &kp KP_N0  &kp KP_DOT  &td_divide_eq
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>,
                <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_1 {
            bindings = <
             &rgb_ug RGB_EFF  &rgb_ug RGB_TOG  &ext_power EP_TOG  &kp BACKSPACE
             &bt BT_CLR       &bt BT_PRV       &bt BT_NXT         &trans
&trans       &trans           &trans           &trans             &trans
&bootloader  &to 0            &trans           &trans             &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_FAST_FORWARD C_REWIND>,
                <&inc_dec_kp C_FAST_FORWARD C_REWIND>;
        };
    };
};
